<?php

/**
 * This is the model base class for the table "req_decision".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ReqDecision".
 *
 * Columns in table "req_decision" available as properties of the model,
 * followed by relations of table "req_decision" available as properties of the model.
 *
 * @property integer $idREQ_DECISION
 * @property integer $REQUISITION_idREQUISITION
 * @property string $note
 * @property string $note_apmgr
 * @property string $note_apexec
 * @property integer $control_sn
 * @property string $asset_num
 * @property integer $transfer_from
 * @property string $transfer_from_text
 * @property integer $check_price
 *
 * @property Requisition $rEQUISITIONIdREQUISITION
 * @property ReqItemsDecision[] $reqItemsDecisions
 * @property ReqOrder[] $reqOrders
 */
abstract class BaseReqDecision extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'req_decision';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ReqDecision|ReqDecisions', $n);
	}

	public static function representingColumn() {
		return 'note';
	}

	public function rules() {
		return array(
			array('REQUISITION_idREQUISITION, control_sn', 'required'),
			array('REQUISITION_idREQUISITION, control_sn, transfer_from, check_price', 'numerical', 'integerOnly'=>true),
			array('note, note_apmgr, note_apexec', 'length', 'max'=>500),
			array('asset_num', 'length', 'max'=>45),
			array('transfer_from_text', 'length', 'max'=>100),
			array('note, note_apmgr, note_apexec, asset_num, transfer_from, transfer_from_text, check_price', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idREQ_DECISION, REQUISITION_idREQUISITION, note, note_apmgr, note_apexec, control_sn, asset_num, transfer_from, transfer_from_text, check_price', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'rEQUISITIONIdREQUISITION' => array(self::BELONGS_TO, 'Requisition', 'REQUISITION_idREQUISITION'),
			'reqItemsDecisions' => array(self::HAS_MANY, 'ReqItemsDecision', 'REQ_DECISION_idREQ_DECISION'),
			'reqOrders' => array(self::HAS_MANY, 'ReqOrder', 'REQ_DECISION_idREQ_DECISION'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idREQ_DECISION' => Yii::t('app', 'Id Req Decision'),
			'REQUISITION_idREQUISITION' => null,
			'note' => Yii::t('app', 'Note'),
			'note_apmgr' => Yii::t('app', 'Note Apmgr'),
			'note_apexec' => Yii::t('app', 'Note Apexec'),
			'control_sn' => Yii::t('app', 'Control Sn'),
			'asset_num' => Yii::t('app', 'Asset Num'),
			'transfer_from' => Yii::t('app', 'Transfer From'),
			'transfer_from_text' => Yii::t('app', 'Transfer From Text'),
			'check_price' => Yii::t('app', 'Check Price'),
			'rEQUISITIONIdREQUISITION' => null,
			'reqItemsDecisions' => null,
			'reqOrders' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idREQ_DECISION', $this->idREQ_DECISION);
		$criteria->compare('REQUISITION_idREQUISITION', $this->REQUISITION_idREQUISITION);
		$criteria->compare('note', $this->note, true);
		$criteria->compare('note_apmgr', $this->note_apmgr, true);
		$criteria->compare('note_apexec', $this->note_apexec, true);
		$criteria->compare('control_sn', $this->control_sn);
		$criteria->compare('asset_num', $this->asset_num, true);
		$criteria->compare('transfer_from', $this->transfer_from);
		$criteria->compare('transfer_from_text', $this->transfer_from_text, true);
		$criteria->compare('check_price', $this->check_price);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}