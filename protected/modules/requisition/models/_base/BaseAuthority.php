<?php

/**
 * This is the model base class for the table "authority".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Authority".
 *
 * Columns in table "authority" available as properties of the model,
 * followed by relations of table "authority" available as properties of the model.
 *
 * @property string $idAUTHORITY
 * @property integer $STATUS_idSTATUS
 * @property integer $GROUP_idGROUP
 *
 * @property Status $sTATUSIdSTATUS
 * @property Group $gROUPIdGROUP
 */
abstract class BaseAuthority extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'authority';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Authority|Authorities', $n);
	}

	public static function representingColumn() {
		return 'idAUTHORITY';
	}

	public function rules() {
		return array(
			array('STATUS_idSTATUS, GROUP_idGROUP', 'required'),
			array('STATUS_idSTATUS, GROUP_idGROUP', 'numerical', 'integerOnly'=>true),
			array('idAUTHORITY, STATUS_idSTATUS, GROUP_idGROUP', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'sTATUSIdSTATUS' => array(self::BELONGS_TO, 'Status', 'STATUS_idSTATUS'),
			'gROUPIdGROUP' => array(self::BELONGS_TO, 'Group', 'GROUP_idGROUP'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idAUTHORITY' => Yii::t('app', 'ID'),
			'STATUS_idSTATUS' => Yii::t('app', 'Grant Sign Status...'),
			'GROUP_idGROUP' => Yii::t('app', 'To Group...'),
			'sTATUSIdSTATUS' => null,
			'gROUPIdGROUP' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idAUTHORITY', $this->idAUTHORITY, true);
		$criteria->compare('STATUS_idSTATUS', $this->STATUS_idSTATUS);
		$criteria->compare('GROUP_idGROUP', $this->GROUP_idGROUP);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}