<?php

/**
 * This is the model base class for the table "user_facility".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserFacility".
 *
 * Columns in table "user_facility" available as properties of the model,
 * followed by relations of table "user_facility" available as properties of the model.
 *
 * @property integer $idUSER_FACILITY
 * @property integer $USER_idUSER
 * @property integer $FACILITY_idFACILITY
 *
 * @property User $uSERIdUSER
 * @property Facility $fACILITYIdFACILITY
 */
abstract class BaseUserFacility extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_facility';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserFacility|UserFacilities', $n);
	}

	public static function representingColumn() {
		return 'idUSER_FACILITY';
	}

	public function rules() {
		return array(
			array('USER_idUSER, FACILITY_idFACILITY', 'required'),
			array('USER_idUSER, FACILITY_idFACILITY', 'numerical', 'integerOnly'=>true),
			array('idUSER_FACILITY, USER_idUSER, FACILITY_idFACILITY', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'uSERIdUSER' => array(self::BELONGS_TO, 'User', 'USER_idUSER'),
			'fACILITYIdFACILITY' => array(self::BELONGS_TO, 'Facility', 'FACILITY_idFACILITY'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idUSER_FACILITY' => Yii::t('app', 'Id User Facility'),
			'USER_idUSER' => null,
			'FACILITY_idFACILITY' => null,
			'uSERIdUSER' => null,
			'fACILITYIdFACILITY' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idUSER_FACILITY', $this->idUSER_FACILITY);
		$criteria->compare('USER_idUSER', $this->USER_idUSER);
		$criteria->compare('FACILITY_idFACILITY', $this->FACILITY_idFACILITY);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}