<?php

/**
 * This is the model base class for the table "req_items_service".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ReqItemsService".
 *
 * Columns in table "req_items_service" available as properties of the model,
 * followed by relations of table "req_items_service" available as properties of the model.
 *
 * @property integer $idREQ_SERVICE
 * @property integer $REQUISITION_idREQUISITION
 * @property string $vendor
 * @property double $qoutation
 *
 * @property ReqItemsDecision[] $reqItemsDecisions
 * @property Requisition $rEQUISITIONIdREQUISITION
 */
abstract class BaseReqItemsService extends GxActiveRecord {

	public $largest = "";
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'req_items_service';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ReqItemsService|ReqItemsServices', $n);
	}

	public static function representingColumn() {
		return 'vendor';
	}

	public function rules() {
		return array(
			array('vendor, qoutation', 'required','on'=>'createso'),
			array('is_approved', 'required','on'=>'signpurch'),			
			array('qoutation, is_approved', 'numerical'),
			array('vendor', 'length', 'max'=>45),
			array('idREQ_SERVICE, REQUISITION_idREQUISITION, vendor, qoutation, is_approved', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'reqItemsDecisions' => array(self::HAS_MANY, 'ReqItemsDecision', 'REQ_ITEMS_SERVICE_idREQ_SERVICE'),
			'rEQUISITIONIdREQUISITION' => array(self::BELONGS_TO, 'Requisition', 'REQUISITION_idREQUISITION'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idREQ_SERVICE' => Yii::t('app', 'Id Req Service'),
			'REQUISITION_idREQUISITION' => null,
			'vendor' => Yii::t('app', 'Vendor'),
			'qoutation' => Yii::t('app', 'Qoutation'),
			'reqItemsDecisions' => null,
			'rEQUISITIONIdREQUISITION' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idREQ_SERVICE', $this->idREQ_SERVICE);
		$criteria->compare('REQUISITION_idREQUISITION', $this->REQUISITION_idREQUISITION);
		$criteria->compare('vendor', $this->vendor, true);
		$criteria->compare('qoutation', $this->qoutation);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}