<?php

/**
 * This is the model base class for the table "requisition".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RequisitionTemp".
 *
 * Columns in table "requisition" available as properties of the model,
 * followed by relations of table "requisition" available as properties of the model.
 *
 * @property integer $idREQUISITION
 * @property integer $REQTYPE_idREQTYPE
 * @property integer $FACILITY_idFACILITY
 * @property integer $PRIORITY_idPRIORITY
 * @property string $priority_reason
 * @property integer $STATUS_idSTATUS
 * @property string $title
 * @property string $preferred_vendor
 * @property string $project_name
 * @property string $service_description
 * @property integer $USER_idUSER_sign_req
 * @property string $date_posted
 * @property integer $USER_idUSER_sign_fceo
 * @property string $date_sign_fceo
 * @property string $note_fceo
 * @property integer $USER_idUSER_sign_admin
 * @property string $date_sign_admin
 * @property string $note_admin
 * @property integer $USER_idUSER_sign_apmnl
 * @property string $date_sign_apmnl
 * @property string $note_apmnl
 * @property integer $USER_idUSER_sign_apcorp
 * @property string $date_sign_apcorp
 * @property string $note_apcorp
 * @property integer $USER_idUSER_sign_apceo
 * @property string $date_sign_apceo
 * @property string $note_apceo
 * @property integer $USER_idUSER_sign_purch
 * @property string $date_sign_purch
 * @property string $note_purch
 * @property integer $USER_idUSER_sign_rcvr
 * @property string $date_sign_rcvr
 * @property string $note_rcvr
 * @property integer $USER_idUSER_sign_apinv
 * @property string $date_sign_apinv
 * @property string $note_apinv
 * @property integer $price_checked
 * @property string $po_num
 * @property string $order_date
 * @property string $estimated_delivery_date
 * @property string $confirmation_number
 * @property string $completion_date
 * @property integer $is_billed
 * @property string $invoice_number
 * @property string $cancel_reason
 * @property string $datetime_cancel
 * @property integer $USER_idUSER_cancel
 * @property integer $has_agreed_tos
 *
 * @property AttachmentDecApceo[] $attachmentDecApceos
 * @property AttachmentDecApcorp[] $attachmentDecApcorps
 * @property AttachmentDecApmnl[] $attachmentDecApmnls
 * @property AttachmentFacAdmin[] $attachmentFacAdmins
 * @property AttachmentInv[] $attachmentInvs
 * @property AttachmentOrder[] $attachmentOrders
 * @property AttachmentReq[] $attachmentReqs
 * @property ReqDecision[] $reqDecisions
 * @property ReqItemsPurchase[] $reqItemsPurchases
 * @property ReqItemsService[] $reqItemsServices
 * @property ReqOrder[] $reqOrders
 * @property Reqtype $rEQTYPEIdREQTYPE
 * @property Facility $fACILITYIdFACILITY
 * @property Priority $pRIORITYIdPRIORITY
 * @property Status $sTATUSIdSTATUS
 * @property User $uSERIdUSERSignReq
 * @property User $uSERIdUSERSignFceo
 * @property User $uSERIdUSERSignAdmin
 * @property User $uSERIdUSERSignApmnl
 * @property User $uSERIdUSERSignApcorp
 * @property User $uSERIdUSERSignApceo
 * @property User $uSERIdUSERSignPurch
 * @property User $uSERIdUSERSignRcvr
 * @property User $uSERIdUSERSignApinv
 * @property User $uSERIdUSERCancel
 */
abstract class BaseRequisitionTemp extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'requisition';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'RequisitionTemp|RequisitionTemps', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('REQTYPE_idREQTYPE, FACILITY_idFACILITY, PRIORITY_idPRIORITY, title, preferred_vendor', 'required'),
			array('REQTYPE_idREQTYPE, FACILITY_idFACILITY, PRIORITY_idPRIORITY, STATUS_idSTATUS, USER_idUSER_sign_req, USER_idUSER_sign_fceo, USER_idUSER_sign_admin, USER_idUSER_sign_apmnl, USER_idUSER_sign_apcorp, USER_idUSER_sign_apceo, USER_idUSER_sign_purch, USER_idUSER_sign_rcvr, USER_idUSER_sign_apinv, price_checked, is_billed, USER_idUSER_cancel, has_agreed_tos', 'numerical', 'integerOnly'=>true),
			array('priority_reason, title, preferred_vendor, confirmation_number, invoice_number', 'length', 'max'=>100),
			array('project_name', 'length', 'max'=>250),
			array('po_num', 'length', 'max'=>10),
			array('service_description, date_posted, date_sign_fceo, note_fceo, date_sign_admin, note_admin, date_sign_apmnl, note_apmnl, date_sign_apcorp, note_apcorp, date_sign_apceo, note_apceo, date_sign_purch, note_purch, date_sign_rcvr, note_rcvr, date_sign_apinv, note_apinv, order_date, estimated_delivery_date, completion_date, cancel_reason, datetime_cancel', 'safe'),
			array('priority_reason, STATUS_idSTATUS, project_name, service_description, USER_idUSER_sign_req, date_posted, USER_idUSER_sign_fceo, date_sign_fceo, note_fceo, USER_idUSER_sign_admin, date_sign_admin, note_admin, USER_idUSER_sign_apmnl, date_sign_apmnl, note_apmnl, USER_idUSER_sign_apcorp, date_sign_apcorp, note_apcorp, USER_idUSER_sign_apceo, date_sign_apceo, note_apceo, USER_idUSER_sign_purch, date_sign_purch, note_purch, USER_idUSER_sign_rcvr, date_sign_rcvr, note_rcvr, USER_idUSER_sign_apinv, date_sign_apinv, note_apinv, price_checked, po_num, order_date, estimated_delivery_date, confirmation_number, completion_date, is_billed, invoice_number, cancel_reason, datetime_cancel, USER_idUSER_cancel, has_agreed_tos', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idREQUISITION, REQTYPE_idREQTYPE, FACILITY_idFACILITY, PRIORITY_idPRIORITY, priority_reason, STATUS_idSTATUS, title, preferred_vendor, project_name, service_description, USER_idUSER_sign_req, date_posted, USER_idUSER_sign_fceo, date_sign_fceo, note_fceo, USER_idUSER_sign_admin, date_sign_admin, note_admin, USER_idUSER_sign_apmnl, date_sign_apmnl, note_apmnl, USER_idUSER_sign_apcorp, date_sign_apcorp, note_apcorp, USER_idUSER_sign_apceo, date_sign_apceo, note_apceo, USER_idUSER_sign_purch, date_sign_purch, note_purch, USER_idUSER_sign_rcvr, date_sign_rcvr, note_rcvr, USER_idUSER_sign_apinv, date_sign_apinv, note_apinv, price_checked, po_num, order_date, estimated_delivery_date, confirmation_number, completion_date, is_billed, invoice_number, cancel_reason, datetime_cancel, USER_idUSER_cancel, has_agreed_tos', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'attachmentDecApceos' => array(self::HAS_MANY, 'AttachmentDecApceo', 'REQUISITION_idREQUISITION'),
			'attachmentDecApcorps' => array(self::HAS_MANY, 'AttachmentDecApcorp', 'REQUISITION_idREQUISITION'),
			'attachmentDecApmnls' => array(self::HAS_MANY, 'AttachmentDecApmnl', 'REQUISITION_idREQUISITION'),
			'attachmentFacAdmins' => array(self::HAS_MANY, 'AttachmentFacAdmin', 'REQ_idREQ'),
			'attachmentInvs' => array(self::HAS_MANY, 'AttachmentInv', 'REQUISITION_idREQUISITION'),
			'attachmentOrders' => array(self::HAS_MANY, 'AttachmentOrder', 'REQUISITION_idREQUISITION'),
			'attachmentReqs' => array(self::HAS_MANY, 'AttachmentReq', 'REQUISITION_idREQUISITION'),
			'reqDecisions' => array(self::HAS_MANY, 'ReqDecision', 'REQUISITION_idREQUISITION'),
			'reqItemsPurchases' => array(self::HAS_MANY, 'ReqItemsPurchase', 'REQUISITION_idREQUISITION'),
			'reqItemsServices' => array(self::HAS_MANY, 'ReqItemsService', 'REQUISITION_idREQUISITION'),
			'reqOrders' => array(self::HAS_MANY, 'ReqOrder', 'REQUISITION_idREQUISITION'),
			'rEQTYPEIdREQTYPE' => array(self::BELONGS_TO, 'Reqtype', 'REQTYPE_idREQTYPE'),
			'fACILITYIdFACILITY' => array(self::BELONGS_TO, 'Facility', 'FACILITY_idFACILITY'),
			'pRIORITYIdPRIORITY' => array(self::BELONGS_TO, 'Priority', 'PRIORITY_idPRIORITY'),
			'sTATUSIdSTATUS' => array(self::BELONGS_TO, 'Status', 'STATUS_idSTATUS'),
			'uSERIdUSERSignReq' => array(self::BELONGS_TO, 'User', 'USER_idUSER_sign_req'),
			'uSERIdUSERSignFceo' => array(self::BELONGS_TO, 'User', 'USER_idUSER_sign_fceo'),
			'uSERIdUSERSignAdmin' => array(self::BELONGS_TO, 'User', 'USER_idUSER_sign_admin'),
			'uSERIdUSERSignApmnl' => array(self::BELONGS_TO, 'User', 'USER_idUSER_sign_apmnl'),
			'uSERIdUSERSignApcorp' => array(self::BELONGS_TO, 'User', 'USER_idUSER_sign_apcorp'),
			'uSERIdUSERSignApceo' => array(self::BELONGS_TO, 'User', 'USER_idUSER_sign_apceo'),
			'uSERIdUSERSignPurch' => array(self::BELONGS_TO, 'User', 'USER_idUSER_sign_purch'),
			'uSERIdUSERSignRcvr' => array(self::BELONGS_TO, 'User', 'USER_idUSER_sign_rcvr'),
			'uSERIdUSERSignApinv' => array(self::BELONGS_TO, 'User', 'USER_idUSER_sign_apinv'),
			'uSERIdUSERCancel' => array(self::BELONGS_TO, 'User', 'USER_idUSER_cancel'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idREQUISITION' => Yii::t('app', 'Id Requisition'),
			'REQTYPE_idREQTYPE' => null,
			'FACILITY_idFACILITY' => null,
			'PRIORITY_idPRIORITY' => null,
			'priority_reason' => Yii::t('app', 'Priority Reason'),
			'STATUS_idSTATUS' => null,
			'title' => Yii::t('app', 'Title'),
			'preferred_vendor' => Yii::t('app', 'Preferred Vendor'),
			'project_name' => Yii::t('app', 'Project Name'),
			'service_description' => Yii::t('app', 'Service Description'),
			'USER_idUSER_sign_req' => null,
			'date_posted' => Yii::t('app', 'Date Posted'),
			'USER_idUSER_sign_fceo' => null,
			'date_sign_fceo' => Yii::t('app', 'Date Sign Fceo'),
			'note_fceo' => Yii::t('app', 'Note Fceo'),
			'USER_idUSER_sign_admin' => null,
			'date_sign_admin' => Yii::t('app', 'Date Sign Admin'),
			'note_admin' => Yii::t('app', 'Note Admin'),
			'USER_idUSER_sign_apmnl' => null,
			'date_sign_apmnl' => Yii::t('app', 'Date Sign Apmnl'),
			'note_apmnl' => Yii::t('app', 'Note Apmnl'),
			'USER_idUSER_sign_apcorp' => null,
			'date_sign_apcorp' => Yii::t('app', 'Date Sign Apcorp'),
			'note_apcorp' => Yii::t('app', 'Note Apcorp'),
			'USER_idUSER_sign_apceo' => null,
			'date_sign_apceo' => Yii::t('app', 'Date Sign Apceo'),
			'note_apceo' => Yii::t('app', 'Note Apceo'),
			'USER_idUSER_sign_purch' => null,
			'date_sign_purch' => Yii::t('app', 'Date Sign Purch'),
			'note_purch' => Yii::t('app', 'Note Purch'),
			'USER_idUSER_sign_rcvr' => null,
			'date_sign_rcvr' => Yii::t('app', 'Date Sign Rcvr'),
			'note_rcvr' => Yii::t('app', 'Note Rcvr'),
			'USER_idUSER_sign_apinv' => null,
			'date_sign_apinv' => Yii::t('app', 'Date Sign Apinv'),
			'note_apinv' => Yii::t('app', 'Note Apinv'),
			'price_checked' => Yii::t('app', 'Price Checked'),
			'po_num' => Yii::t('app', 'Po Num'),
			'order_date' => Yii::t('app', 'Order Date'),
			'estimated_delivery_date' => Yii::t('app', 'Estimated Delivery Date'),
			'confirmation_number' => Yii::t('app', 'Confirmation Number'),
			'completion_date' => Yii::t('app', 'Completion Date'),
			'is_billed' => Yii::t('app', 'Is Billed'),
			'invoice_number' => Yii::t('app', 'Invoice Number'),
			'cancel_reason' => Yii::t('app', 'Cancel Reason'),
			'datetime_cancel' => Yii::t('app', 'Datetime Cancel'),
			'USER_idUSER_cancel' => null,
			'has_agreed_tos' => Yii::t('app', 'Has Agreed Tos'),
			'attachmentDecApceos' => null,
			'attachmentDecApcorps' => null,
			'attachmentDecApmnls' => null,
			'attachmentFacAdmins' => null,
			'attachmentInvs' => null,
			'attachmentOrders' => null,
			'attachmentReqs' => null,
			'reqDecisions' => null,
			'reqItemsPurchases' => null,
			'reqItemsServices' => null,
			'reqOrders' => null,
			'rEQTYPEIdREQTYPE' => null,
			'fACILITYIdFACILITY' => null,
			'pRIORITYIdPRIORITY' => null,
			'sTATUSIdSTATUS' => null,
			'uSERIdUSERSignReq' => null,
			'uSERIdUSERSignFceo' => null,
			'uSERIdUSERSignAdmin' => null,
			'uSERIdUSERSignApmnl' => null,
			'uSERIdUSERSignApcorp' => null,
			'uSERIdUSERSignApceo' => null,
			'uSERIdUSERSignPurch' => null,
			'uSERIdUSERSignRcvr' => null,
			'uSERIdUSERSignApinv' => null,
			'uSERIdUSERCancel' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idREQUISITION', $this->idREQUISITION);
		$criteria->compare('REQTYPE_idREQTYPE', $this->REQTYPE_idREQTYPE);
		$criteria->compare('FACILITY_idFACILITY', $this->FACILITY_idFACILITY);
		$criteria->compare('PRIORITY_idPRIORITY', $this->PRIORITY_idPRIORITY);
		$criteria->compare('priority_reason', $this->priority_reason, true);
		$criteria->compare('STATUS_idSTATUS', $this->STATUS_idSTATUS);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('preferred_vendor', $this->preferred_vendor, true);
		$criteria->compare('project_name', $this->project_name, true);
		$criteria->compare('service_description', $this->service_description, true);
		$criteria->compare('USER_idUSER_sign_req', $this->USER_idUSER_sign_req);
		$criteria->compare('date_posted', $this->date_posted, true);
		$criteria->compare('USER_idUSER_sign_fceo', $this->USER_idUSER_sign_fceo);
		$criteria->compare('date_sign_fceo', $this->date_sign_fceo, true);
		$criteria->compare('note_fceo', $this->note_fceo, true);
		$criteria->compare('USER_idUSER_sign_admin', $this->USER_idUSER_sign_admin);
		$criteria->compare('date_sign_admin', $this->date_sign_admin, true);
		$criteria->compare('note_admin', $this->note_admin, true);
		$criteria->compare('USER_idUSER_sign_apmnl', $this->USER_idUSER_sign_apmnl);
		$criteria->compare('date_sign_apmnl', $this->date_sign_apmnl, true);
		$criteria->compare('note_apmnl', $this->note_apmnl, true);
		$criteria->compare('USER_idUSER_sign_apcorp', $this->USER_idUSER_sign_apcorp);
		$criteria->compare('date_sign_apcorp', $this->date_sign_apcorp, true);
		$criteria->compare('note_apcorp', $this->note_apcorp, true);
		$criteria->compare('USER_idUSER_sign_apceo', $this->USER_idUSER_sign_apceo);
		$criteria->compare('date_sign_apceo', $this->date_sign_apceo, true);
		$criteria->compare('note_apceo', $this->note_apceo, true);
		$criteria->compare('USER_idUSER_sign_purch', $this->USER_idUSER_sign_purch);
		$criteria->compare('date_sign_purch', $this->date_sign_purch, true);
		$criteria->compare('note_purch', $this->note_purch, true);
		$criteria->compare('USER_idUSER_sign_rcvr', $this->USER_idUSER_sign_rcvr);
		$criteria->compare('date_sign_rcvr', $this->date_sign_rcvr, true);
		$criteria->compare('note_rcvr', $this->note_rcvr, true);
		$criteria->compare('USER_idUSER_sign_apinv', $this->USER_idUSER_sign_apinv);
		$criteria->compare('date_sign_apinv', $this->date_sign_apinv, true);
		$criteria->compare('note_apinv', $this->note_apinv, true);
		$criteria->compare('price_checked', $this->price_checked);
		$criteria->compare('po_num', $this->po_num, true);
		$criteria->compare('order_date', $this->order_date, true);
		$criteria->compare('estimated_delivery_date', $this->estimated_delivery_date, true);
		$criteria->compare('confirmation_number', $this->confirmation_number, true);
		$criteria->compare('completion_date', $this->completion_date, true);
		$criteria->compare('is_billed', $this->is_billed);
		$criteria->compare('invoice_number', $this->invoice_number, true);
		$criteria->compare('cancel_reason', $this->cancel_reason, true);
		$criteria->compare('datetime_cancel', $this->datetime_cancel, true);
		$criteria->compare('USER_idUSER_cancel', $this->USER_idUSER_cancel);
		$criteria->compare('has_agreed_tos', $this->has_agreed_tos);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}