<?php

/**
 * This is the model base class for the table "mailgroup_user_status".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MailgroupUserStatus".
 *
 * Columns in table "mailgroup_user_status" available as properties of the model,
 * followed by relations of table "mailgroup_user_status" available as properties of the model.
 *
 * @property integer $idMAILGROUP_USER_STATUS
 * @property integer $MAILGROUP_idMAILGROUP
 * @property integer $USER_idUSER
 *
 * @property MailGroup $mAILGROUPIdMAILGROUP
 * @property User $uSERIdUSER
 */
abstract class BaseMailgroupUserStatus extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'mailgroup_user_status';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MailgroupUserStatus|MailgroupUserStatuses', $n);
	}

	public static function representingColumn() {
		return 'idMAILGROUP_USER_STATUS';
	}

	public function rules() {
		return array(
			array('MAILGROUP_idMAILGROUP, USER_idUSER', 'required'),
			array('MAILGROUP_idMAILGROUP, USER_idUSER', 'numerical', 'integerOnly'=>true),
			array('idMAILGROUP_USER_STATUS, MAILGROUP_idMAILGROUP, USER_idUSER', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'mAILGROUPIdMAILGROUP' => array(self::BELONGS_TO, 'MailGroup', 'MAILGROUP_idMAILGROUP'),
			'uSERIdUSER' => array(self::BELONGS_TO, 'User', 'USER_idUSER'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idMAILGROUP_USER_STATUS' => Yii::t('app', 'Id Mailgroup User Status'),
			'MAILGROUP_idMAILGROUP' => null,
			'USER_idUSER' => null,
			'mAILGROUPIdMAILGROUP' => null,
			'uSERIdUSER' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idMAILGROUP_USER_STATUS', $this->idMAILGROUP_USER_STATUS);
		$criteria->compare('MAILGROUP_idMAILGROUP', $this->MAILGROUP_idMAILGROUP);
		$criteria->compare('USER_idUSER', $this->USER_idUSER);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}