<?php

/**
 * This is the model base class for the table "priority".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Priority".
 *
 * Columns in table "priority" available as properties of the model,
 * followed by relations of table "priority" available as properties of the model.
 *
 * @property integer $idPRIORITY
 * @property string $acronym
 * @property string $title
 * @property string $description
 *
 * @property Requisition[] $requisitions
 */
abstract class BasePriority extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'priority';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Priority|Priorities', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('acronym, title', 'required'),
			array('acronym', 'length', 'max'=>2),
			array('title, description', 'length', 'max'=>45),
			array('description', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idPRIORITY, acronym, title, description', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'requisitions' => array(self::HAS_MANY, 'Requisition', 'PRIORITY_idPRIORITY'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idPRIORITY' => Yii::t('app', 'Id Priority'),
			'acronym' => Yii::t('app', 'Acronym'),
			'title' => Yii::t('app', 'Title'),
			'description' => Yii::t('app', 'Description'),
			'requisitions' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idPRIORITY', $this->idPRIORITY);
		$criteria->compare('acronym', $this->acronym, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('description', $this->description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	//helper fxns
	public function getConcatpriority(){
		return $this->title.' - '.$this->description;
	}
}